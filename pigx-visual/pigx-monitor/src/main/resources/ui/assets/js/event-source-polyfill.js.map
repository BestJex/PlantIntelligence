{"version":3,"sources":["webpack:///assets/js/event-source-polyfill.js","webpack:///./node_modules/event-source-polyfill/src/eventsource.js"],"names":["webpackJsonp","./node_modules/event-source-polyfill/src/eventsource.js","module","exports","global","TextDecoderPolyfill","this","bitsNeeded","codePoint","XHRWrapper","xhr","withCredentials","responseType","readyState","status","statusText","responseText","onprogress","k","onreadystatechange","_contentType","_xhr","_sendTimeout","_abort","toLowerCase","name","replace","c","String","fromCharCode","charCodeAt","HeadersPolyfill","all","map","Object","create","array","split","i","length","line","parts","shift","value","join","_map","XHRTransport","HeadersWrapper","headers","_headers","FetchTransport","EventTarget","_listeners","throwError","e","setTimeout","Event","type","target","undefined","MessageEvent","options","call","data","lastEventId","ConnectionEvent","EventSourcePolyfill","url","onopen","onmessage","onerror","_close","start","getBestTransport","XMLHttpRequest","prototype","XDomainRequest","es","Boolean","initialRetry","clampDuration","heartbeatTimeout","parseDuration","retry","wasActivity","JSON","parse","stringify","CurrentTransport","Transport","isFetchSupported","transport","cancelFunction","timeout","currentState","WAITING","dataBuffer","lastEventIdBuffer","eventTypeBuffer","textBuffer","state","FIELD_START","fieldStart","valueStart","onStart","contentType","cancel","CONNECTING","contentTypeRegExp","test","OPEN","event","dispatchEvent","fire","message","Error","close","onProgress","textChunk","n","chunk","slice","position","AFTER_CR","FIELD","field","clearTimeout","onTimeout","CLOSED","VALUE_START","VALUE","onFinish","Math","min","requestURL","indexOf","encodeURIComponent","requestHeaders","hasOwnProperty","open","error","NativeEventSource","EventSource","document","Promise","fetch","Response","TextDecoder","TextEncoder","C","F","callback","then","result","resolve","decode","octets","valid","octetsCount","string","octet","encode","stream","console","log","method","that","silent","onload","onabort","abort","getResponseHeader","onReadyStateChange","setRequestHeader","getAllResponseHeaders","send","error1","get","onStartCallback","onProgressCallback","onFinishCallback","offset","textDecoder","credentials","response","reader","body","getReader","reject","readNextChunk","read","done","typeListeners","listener","handleEvent","addEventListener","listeners","found","push","removeEventListener","filtered","def","parseInt","max","f","window"],"mappings":"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","file":"assets/js/event-source-polyfill.js","sourcesContent":["webpackJsonp([0],{\n\n/***/ \"./node_modules/event-source-polyfill/src/eventsource.js\":\n/***/ (function(module, exports) {\n\n/** @license\r\n * eventsource.js\r\n * Available under MIT License (MIT)\r\n * https://github.com/Yaffle/EventSource/\r\n */\r\n\r\n/*jslint indent: 2, vars: true, plusplus: true */\r\n/*global setTimeout, clearTimeout */\r\n\r\n(function (global) {\r\n  \"use strict\";\r\n\r\n  var setTimeout = global.setTimeout;\r\n  var clearTimeout = global.clearTimeout;\r\n  var XMLHttpRequest = global.XMLHttpRequest;\r\n  var XDomainRequest = global.XDomainRequest;\r\n  var NativeEventSource = global.EventSource;\r\n  var document = global.document;\r\n  var Promise = global.Promise;\r\n  var fetch = global.fetch;\r\n  var Response = global.Response;\r\n  var TextDecoder = global.TextDecoder;\r\n  var TextEncoder = global.TextEncoder;\r\n\r\n  if (Object.create == null) {\r\n    Object.create = function (C) {\r\n      function F(){}\r\n      F.prototype = C;\r\n      return new F();\r\n    };\r\n  }\r\n\r\n  // ?\r\n  if (Promise != undefined && Promise.prototype[\"finally\"] == undefined) {\r\n    Promise.prototype[\"finally\"] = function (callback) {\r\n      return this.then(function (result) {\r\n        return Promise.resolve(callback()).then(function () {\r\n          return result;\r\n        });\r\n      }, function (error) {\r\n        return Promise.resolve(callback()).then(function () {\r\n          throw error;\r\n        });\r\n      });\r\n    };\r\n  }\r\n\r\n  function TextDecoderPolyfill() {\r\n    this.bitsNeeded = 0;\r\n    this.codePoint = 0;\r\n  }\r\n\r\n  TextDecoderPolyfill.prototype.decode = function (octets) {\r\n    function valid(codePoint, shift, octetsCount) {\r\n      if (octetsCount === 1) {\r\n        return codePoint >= 0x0080 >> shift && codePoint << shift <= 0x07FF;\r\n      }\r\n      if (octetsCount === 2) {\r\n        return codePoint >= 0x0800 >> shift && codePoint << shift <= 0xD7FF || codePoint >= 0xE000 >> shift && codePoint << shift <= 0xFFFF;\r\n      }\r\n      if (octetsCount === 3) {\r\n        return codePoint >= 0x010000 >> shift && codePoint << shift <= 0x10FFFF;\r\n      }\r\n      throw new Error();\r\n    }\r\n    function octetsCount(bitsNeeded, codePoint) {\r\n      if (bitsNeeded === 6 * 1) {\r\n        return codePoint >> 6 > 15 ? 3 : codePoint > 31 ? 2 : 1;\r\n      }\r\n      if (bitsNeeded === 6 * 2) {\r\n        return codePoint > 15 ? 3 : 2;\r\n      }\r\n      if (bitsNeeded === 6 * 3) {\r\n        return 3;\r\n      }\r\n      throw new Error();\r\n    }\r\n    var REPLACER = 0xFFFD;\r\n    var string = \"\";\r\n    var bitsNeeded = this.bitsNeeded;\r\n    var codePoint = this.codePoint;\r\n    for (var i = 0; i < octets.length; i += 1) {\r\n      var octet = octets[i];\r\n      if (bitsNeeded !== 0) {\r\n        if (octet < 128 || octet > 191 || !valid(codePoint << 6 | octet & 63, bitsNeeded - 6, octetsCount(bitsNeeded, codePoint))) {\r\n          bitsNeeded = 0;\r\n          codePoint = REPLACER;\r\n          string += String.fromCharCode(codePoint);\r\n        }\r\n      }\r\n      if (bitsNeeded === 0) {\r\n        if (octet >= 0 && octet <= 127) {\r\n          bitsNeeded = 0;\r\n          codePoint = octet;\r\n        } else if (octet >= 192 && octet <= 223) {\r\n          bitsNeeded = 6 * 1;\r\n          codePoint = octet & 31;\r\n        } else if (octet >= 224 && octet <= 239) {\r\n          bitsNeeded = 6 * 2;\r\n          codePoint = octet & 15;\r\n        } else if (octet >= 240 && octet <= 247) {\r\n          bitsNeeded = 6 * 3;\r\n          codePoint = octet & 7;\r\n        } else {\r\n          bitsNeeded = 0;\r\n          codePoint = REPLACER;\r\n        }\r\n        if (bitsNeeded !== 0 && !valid(codePoint, bitsNeeded, octetsCount(bitsNeeded, codePoint))) {\r\n          bitsNeeded = 0;\r\n          codePoint = REPLACER;\r\n        }\r\n      } else {\r\n        bitsNeeded -= 6;\r\n        codePoint = codePoint << 6 | octet & 63;\r\n      }\r\n      if (bitsNeeded === 0) {\r\n        if (codePoint <= 0xFFFF) {\r\n          string += String.fromCharCode(codePoint);\r\n        } else {\r\n          string += String.fromCharCode(0xD800 + (codePoint - 0xFFFF - 1 >> 10));\r\n          string += String.fromCharCode(0xDC00 + (codePoint - 0xFFFF - 1 & 0x3FF));\r\n        }\r\n      }\r\n    }\r\n    this.bitsNeeded = bitsNeeded;\r\n    this.codePoint = codePoint;\r\n    return string;\r\n  };\r\n\r\n  // Firefox < 38 throws an error with stream option\r\n  var supportsStreamOption = function () {\r\n    try {\r\n      return new TextDecoder().decode(new TextEncoder().encode(\"test\"), {stream: true}) === \"test\";\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n    return false;\r\n  };\r\n\r\n  // IE, Edge\r\n  if (TextDecoder == undefined || TextEncoder == undefined || !supportsStreamOption()) {\r\n    TextDecoder = TextDecoderPolyfill;\r\n  }\r\n\r\n  var k = function () {\r\n  };\r\n\r\n  function XHRWrapper(xhr) {\r\n    this.withCredentials = false;\r\n    this.responseType = \"\";\r\n    this.readyState = 0;\r\n    this.status = 0;\r\n    this.statusText = \"\";\r\n    this.responseText = \"\";\r\n    this.onprogress = k;\r\n    this.onreadystatechange = k;\r\n    this._contentType = \"\";\r\n    this._xhr = xhr;\r\n    this._sendTimeout = 0;\r\n    this._abort = k;\r\n  }\r\n\r\n  XHRWrapper.prototype.open = function (method, url) {\r\n    this._abort(true);\r\n\r\n    var that = this;\r\n    var xhr = this._xhr;\r\n    var state = 1;\r\n    var timeout = 0;\r\n\r\n    this._abort = function (silent) {\r\n      if (that._sendTimeout !== 0) {\r\n        clearTimeout(that._sendTimeout);\r\n        that._sendTimeout = 0;\r\n      }\r\n      if (state === 1 || state === 2 || state === 3) {\r\n        state = 4;\r\n        xhr.onload = k;\r\n        xhr.onerror = k;\r\n        xhr.onabort = k;\r\n        xhr.onprogress = k;\r\n        xhr.onreadystatechange = k;\r\n        // IE 8 - 9: XDomainRequest#abort() does not fire any event\r\n        // Opera < 10: XMLHttpRequest#abort() does not fire any event\r\n        xhr.abort();\r\n        if (timeout !== 0) {\r\n          clearTimeout(timeout);\r\n          timeout = 0;\r\n        }\r\n        if (!silent) {\r\n          that.readyState = 4;\r\n          that.onreadystatechange();\r\n        }\r\n      }\r\n      state = 0;\r\n    };\r\n\r\n    var onStart = function () {\r\n      if (state === 1) {\r\n        //state = 2;\r\n        var status = 0;\r\n        var statusText = \"\";\r\n        var contentType = undefined;\r\n        if (!(\"contentType\" in xhr)) {\r\n          try {\r\n            status = xhr.status;\r\n            statusText = xhr.statusText;\r\n            contentType = xhr.getResponseHeader(\"Content-Type\");\r\n          } catch (error) {\r\n            // IE < 10 throws exception for `xhr.status` when xhr.readyState === 2 || xhr.readyState === 3\r\n            // Opera < 11 throws exception for `xhr.status` when xhr.readyState === 2\r\n            // https://bugs.webkit.org/show_bug.cgi?id=29121\r\n            status = 0;\r\n            statusText = \"\";\r\n            contentType = undefined;\r\n            // Firefox < 14, Chrome ?, Safari ?\r\n            // https://bugs.webkit.org/show_bug.cgi?id=29658\r\n            // https://bugs.webkit.org/show_bug.cgi?id=77854\r\n          }\r\n        } else {\r\n          status = 200;\r\n          statusText = \"OK\";\r\n          contentType = xhr.contentType;\r\n        }\r\n        if (status !== 0) {\r\n          state = 2;\r\n          that.readyState = 2;\r\n          that.status = status;\r\n          that.statusText = statusText;\r\n          that._contentType = contentType;\r\n          that.onreadystatechange();\r\n        }\r\n      }\r\n    };\r\n    var onProgress = function () {\r\n      onStart();\r\n      if (state === 2 || state === 3) {\r\n        state = 3;\r\n        var responseText = \"\";\r\n        try {\r\n          responseText = xhr.responseText;\r\n        } catch (error) {\r\n          // IE 8 - 9 with XMLHttpRequest\r\n        }\r\n        that.readyState = 3;\r\n        that.responseText = responseText;\r\n        that.onprogress();\r\n      }\r\n    };\r\n    var onFinish = function () {\r\n      // Firefox 52 fires \"readystatechange\" (xhr.readyState === 4) without final \"readystatechange\" (xhr.readyState === 3)\r\n      // IE 8 fires \"onload\" without \"onprogress\"\r\n      onProgress();\r\n      if (state === 1 || state === 2 || state === 3) {\r\n        state = 4;\r\n        if (timeout !== 0) {\r\n          clearTimeout(timeout);\r\n          timeout = 0;\r\n        }\r\n        that.readyState = 4;\r\n        that.onreadystatechange();\r\n      }\r\n    };\r\n    var onReadyStateChange = function () {\r\n      if (xhr != undefined) { // Opera 12\r\n        if (xhr.readyState === 4) {\r\n          onFinish();\r\n        } else if (xhr.readyState === 3) {\r\n          onProgress();\r\n        } else if (xhr.readyState === 2) {\r\n          onStart();\r\n        }\r\n      }\r\n    };\r\n    var onTimeout = function () {\r\n      timeout = setTimeout(function () {\r\n        onTimeout();\r\n      }, 500);\r\n      if (xhr.readyState === 3) {\r\n        onProgress();\r\n      }\r\n    };\r\n\r\n    // XDomainRequest#abort removes onprogress, onerror, onload\r\n    xhr.onload = onFinish;\r\n    xhr.onerror = onFinish;\r\n    // improper fix to match Firefox behaviour, but it is better than just ignore abort\r\n    // see https://bugzilla.mozilla.org/show_bug.cgi?id=768596\r\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=880200\r\n    // https://code.google.com/p/chromium/issues/detail?id=153570\r\n    // IE 8 fires \"onload\" without \"onprogress\r\n    xhr.onabort = onFinish;\r\n\r\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=736723    \r\n    if (!(\"sendAsBinary\" in XMLHttpRequest.prototype) && !(\"mozAnon\" in XMLHttpRequest.prototype)) {\r\n      xhr.onprogress = onProgress;\r\n    }\r\n\r\n    // IE 8 - 9 (XMLHTTPRequest)\r\n    // Opera < 12\r\n    // Firefox < 3.5\r\n    // Firefox 3.5 - 3.6 - ? < 9.0\r\n    // onprogress is not fired sometimes or delayed\r\n    // see also #64\r\n    xhr.onreadystatechange = onReadyStateChange;\r\n\r\n    if (\"contentType\" in xhr) {\r\n      url += (url.indexOf(\"?\") === -1 ? \"?\" : \"&\") + \"padding=true\";\r\n    }\r\n    xhr.open(method, url, true);\r\n\r\n    if (\"readyState\" in xhr) {\r\n      // workaround for Opera 12 issue with \"progress\" events\r\n      // #91\r\n      timeout = setTimeout(function () {\r\n        onTimeout();\r\n      }, 0);\r\n    }\r\n  };\r\n  XHRWrapper.prototype.abort = function () {\r\n    this._abort(false);\r\n  };\r\n  XHRWrapper.prototype.getResponseHeader = function (name) {\r\n    return this._contentType;\r\n  };\r\n  XHRWrapper.prototype.setRequestHeader = function (name, value) {\r\n    var xhr = this._xhr;\r\n    if (\"setRequestHeader\" in xhr) {\r\n      xhr.setRequestHeader(name, value);\r\n    }\r\n  };\r\n  XHRWrapper.prototype.getAllResponseHeaders = function () {\r\n    return this._xhr.getAllResponseHeaders != undefined ? this._xhr.getAllResponseHeaders() : \"\";\r\n  };\r\n  XHRWrapper.prototype.send = function () {\r\n    // loading indicator in Safari < ? (6), Chrome < 14, Firefox\r\n    if (!(\"ontimeout\" in XMLHttpRequest.prototype) &&\r\n        document != undefined &&\r\n        document.readyState != undefined &&\r\n        document.readyState !== \"complete\") {\r\n      var that = this;\r\n      that._sendTimeout = setTimeout(function () {\r\n        that._sendTimeout = 0;\r\n        that.send();\r\n      }, 4);\r\n      return;\r\n    }\r\n\r\n    var xhr = this._xhr;\r\n    // withCredentials should be set after \"open\" for Safari and Chrome (< 19 ?)\r\n    xhr.withCredentials = this.withCredentials;\r\n    xhr.responseType = this.responseType;\r\n    try {\r\n      // xhr.send(); throws \"Not enough arguments\" in Firefox 3.0\r\n      xhr.send(undefined);\r\n    } catch (error1) {\r\n      // Safari 5.1.7, Opera 12\r\n      throw error1;\r\n    }\r\n  };\r\n\r\n  function toLowerCase(name) {\r\n    return name.replace(/[A-Z]/g, function (c) {\r\n      return String.fromCharCode(c.charCodeAt(0) + 0x20);\r\n    });\r\n  }\r\n\r\n  function HeadersPolyfill(all) {\r\n    // Get headers: implemented according to mozilla's example code: https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/getAllResponseHeaders#Example\r\n    var map = Object.create(null);\r\n    var array = all.split(\"\\r\\n\");\r\n    for (var i = 0; i < array.length; i += 1) {\r\n      var line = array[i];\r\n      var parts = line.split(\": \");\r\n      var name = parts.shift();\r\n      var value = parts.join(\": \");\r\n      map[toLowerCase(name)] = value;\r\n    }\r\n    this._map = map;\r\n  }\r\n  HeadersPolyfill.prototype.get = function (name) {\r\n    return this._map[toLowerCase(name)];\r\n  };\r\n\r\n  function XHRTransport() {\r\n  }\r\n\r\n  XHRTransport.prototype.open = function (xhr, onStartCallback, onProgressCallback, onFinishCallback, url, withCredentials, headers) {\r\n    xhr.open(\"GET\", url);\r\n    var offset = 0;\r\n    xhr.onprogress = function () {\r\n      var responseText = xhr.responseText;\r\n      var chunk = responseText.slice(offset);\r\n      offset += chunk.length;\r\n      onProgressCallback(chunk);\r\n    };\r\n    xhr.onreadystatechange = function () {\r\n      if (xhr.readyState === 2) {\r\n        var status = xhr.status;\r\n        var statusText = xhr.statusText;\r\n        var contentType = xhr.getResponseHeader(\"Content-Type\");\r\n        var headers = xhr.getAllResponseHeaders();\r\n        onStartCallback(status, statusText, contentType, new HeadersPolyfill(headers), function () {\r\n          xhr.abort();\r\n        });\r\n      } else if (xhr.readyState === 4) {\r\n        onFinishCallback();\r\n      }\r\n    };\r\n    xhr.withCredentials = withCredentials;\r\n    xhr.responseType = \"text\";\r\n    for (var name in headers) {\r\n      if (Object.prototype.hasOwnProperty.call(headers, name)) {\r\n        xhr.setRequestHeader(name, headers[name]);\r\n      }\r\n    }\r\n    xhr.send();\r\n  };\r\n  \r\n  function HeadersWrapper(headers) {\r\n    this._headers = headers;\r\n  }\r\n  HeadersWrapper.prototype.get = function (name) {\r\n    return this._headers.get(name);\r\n  };\r\n\r\n  function FetchTransport() {\r\n  }\r\n\r\n  FetchTransport.prototype.open = function (xhr, onStartCallback, onProgressCallback, onFinishCallback, url, withCredentials, headers) {\r\n    // cache: \"no-store\"\r\n    // https://bugs.chromium.org/p/chromium/issues/detail?id=453190\r\n    var textDecoder = new TextDecoder();\r\n    fetch(url, {\r\n      headers: headers,\r\n      credentials: withCredentials ? \"include\" : \"same-origin\"\r\n    }).then(function (response) {\r\n      var reader = response.body.getReader();\r\n      onStartCallback(response.status, response.statusText, response.headers.get(\"Content-Type\"), new HeadersWrapper(response.headers), function () {\r\n        reader.cancel();\r\n      });\r\n      return new Promise(function (resolve, reject) {\r\n        var readNextChunk = function () {\r\n          reader.read().then(function (result) {\r\n            if (result.done) {\r\n              //Note: bytes in textDecoder are ignored\r\n              resolve(undefined);\r\n            } else {\r\n              var chunk = textDecoder.decode(result.value, {stream: true});\r\n              onProgressCallback(chunk);\r\n              readNextChunk();\r\n            }\r\n          })[\"catch\"](function (error) {\r\n            reject(error);\r\n          });\r\n        };\r\n        readNextChunk();\r\n      });\r\n    })[\"finally\"](function () {\r\n      onFinishCallback();\r\n    });\r\n  };\r\n\r\n  function EventTarget() {\r\n    this._listeners = Object.create(null);\r\n  }\r\n\r\n  function throwError(e) {\r\n    setTimeout(function () {\r\n      throw e;\r\n    }, 0);\r\n  }\r\n\r\n  EventTarget.prototype.dispatchEvent = function (event) {\r\n    event.target = this;\r\n    var typeListeners = this._listeners[event.type];\r\n    if (typeListeners != undefined) {\r\n      var length = typeListeners.length;\r\n      for (var i = 0; i < length; i += 1) {\r\n        var listener = typeListeners[i];\r\n        try {\r\n          if (typeof listener.handleEvent === \"function\") {\r\n            listener.handleEvent(event);\r\n          } else {\r\n            listener.call(this, event);\r\n          }\r\n        } catch (e) {\r\n          throwError(e);\r\n        }\r\n      }\r\n    }\r\n  };\r\n  EventTarget.prototype.addEventListener = function (type, listener) {\r\n    type = String(type);\r\n    var listeners = this._listeners;\r\n    var typeListeners = listeners[type];\r\n    if (typeListeners == undefined) {\r\n      typeListeners = [];\r\n      listeners[type] = typeListeners;\r\n    }\r\n    var found = false;\r\n    for (var i = 0; i < typeListeners.length; i += 1) {\r\n      if (typeListeners[i] === listener) {\r\n        found = true;\r\n      }\r\n    }\r\n    if (!found) {\r\n      typeListeners.push(listener);\r\n    }\r\n  };\r\n  EventTarget.prototype.removeEventListener = function (type, listener) {\r\n    type = String(type);\r\n    var listeners = this._listeners;\r\n    var typeListeners = listeners[type];\r\n    if (typeListeners != undefined) {\r\n      var filtered = [];\r\n      for (var i = 0; i < typeListeners.length; i += 1) {\r\n        if (typeListeners[i] !== listener) {\r\n          filtered.push(typeListeners[i]);\r\n        }\r\n      }\r\n      if (filtered.length === 0) {\r\n        delete listeners[type];\r\n      } else {\r\n        listeners[type] = filtered;\r\n      }\r\n    }\r\n  };\r\n\r\n  function Event(type) {\r\n    this.type = type;\r\n    this.target = undefined;\r\n  }\r\n\r\n  function MessageEvent(type, options) {\r\n    Event.call(this, type);\r\n    this.data = options.data;\r\n    this.lastEventId = options.lastEventId;\r\n  }\r\n\r\n  MessageEvent.prototype = Object.create(Event.prototype);\r\n\r\n  function ConnectionEvent(type, options) {\r\n    Event.call(this, type);\r\n    this.status = options.status;\r\n    this.statusText = options.statusText;\r\n    this.headers = options.headers;\r\n  }\r\n\r\n  ConnectionEvent.prototype = Object.create(Event.prototype);\r\n\r\n  var WAITING = -1;\r\n  var CONNECTING = 0;\r\n  var OPEN = 1;\r\n  var CLOSED = 2;\r\n\r\n  var AFTER_CR = -1;\r\n  var FIELD_START = 0;\r\n  var FIELD = 1;\r\n  var VALUE_START = 2;\r\n  var VALUE = 3;\r\n\r\n  var contentTypeRegExp = /^text\\/event\\-stream;?(\\s*charset\\=utf\\-8)?$/i;\r\n\r\n  var MINIMUM_DURATION = 1000;\r\n  var MAXIMUM_DURATION = 18000000;\r\n\r\n  var parseDuration = function (value, def) {\r\n    var n = parseInt(value, 10);\r\n    if (n !== n) {\r\n      n = def;\r\n    }\r\n    return clampDuration(n);\r\n  };\r\n  var clampDuration = function (n) {\r\n    return Math.min(Math.max(n, MINIMUM_DURATION), MAXIMUM_DURATION);\r\n  };\r\n\r\n  var fire = function (that, f, event) {\r\n    try {\r\n      if (typeof f === \"function\") {\r\n        f.call(that, event);\r\n      }\r\n    } catch (e) {\r\n      throwError(e);\r\n    }\r\n  };\r\n\r\n  function EventSourcePolyfill(url, options) {\r\n    EventTarget.call(this);\r\n\r\n    this.onopen = undefined;\r\n    this.onmessage = undefined;\r\n    this.onerror = undefined;\r\n\r\n    this.url = undefined;\r\n    this.readyState = undefined;\r\n    this.withCredentials = undefined;\r\n\r\n    this._close = undefined;\r\n\r\n    start(this, url, options);\r\n  }\r\n\r\n  function getBestTransport() {\r\n    return XMLHttpRequest && \"withCredentials\" in XMLHttpRequest.prototype\r\n      ? XMLHttpRequest\r\n      : XDomainRequest;\r\n  }\r\n\r\n  var isFetchSupported = fetch != undefined && Response != undefined && \"body\" in Response.prototype;\r\n\r\n  function start(es, url, options) {\r\n    url = String(url);\r\n    var withCredentials = options != undefined && Boolean(options.withCredentials);\r\n\r\n    var initialRetry = clampDuration(1000);\r\n    var heartbeatTimeout = options != undefined && options.heartbeatTimeout != undefined ? parseDuration(options.heartbeatTimeout, 45000) : clampDuration(45000);\r\n\r\n    var lastEventId = \"\";\r\n    var retry = initialRetry;\r\n    var wasActivity = false;\r\n    var headers = options != undefined && options.headers != undefined ? JSON.parse(JSON.stringify(options.headers)) : undefined;\r\n    var CurrentTransport = options != undefined && options.Transport != undefined ? options.Transport : getBestTransport();\r\n    var xhr = isFetchSupported ? undefined : new XHRWrapper(new CurrentTransport());\r\n    var transport = isFetchSupported ? new FetchTransport() : new XHRTransport();\r\n    var cancelFunction = undefined;\r\n    var timeout = 0;\r\n    var currentState = WAITING;\r\n    var dataBuffer = \"\";\r\n    var lastEventIdBuffer = \"\";\r\n    var eventTypeBuffer = \"\";\r\n\r\n    var textBuffer = \"\";\r\n    var state = FIELD_START;\r\n    var fieldStart = 0;\r\n    var valueStart = 0;\r\n\r\n    var onStart = function (status, statusText, contentType, headers, cancel) {\r\n      if (currentState === CONNECTING) {\r\n        cancelFunction = cancel;\r\n        if (status === 200 && contentType != undefined && contentTypeRegExp.test(contentType)) {\r\n          currentState = OPEN;\r\n          wasActivity = true;\r\n          retry = initialRetry;\r\n          es.readyState = OPEN;\r\n          var event = new ConnectionEvent(\"open\", {\r\n            status: status,\r\n            statusText: statusText,\r\n            headers: headers\r\n          });\r\n          es.dispatchEvent(event);\r\n          fire(es, es.onopen, event);\r\n        } else {\r\n          var message = \"\";\r\n          if (status !== 200) {\r\n            if (statusText) {\r\n              statusText = statusText.replace(/\\s+/g, \" \");\r\n            }\r\n            message = \"EventSource's response has a status \" + status + \" \" + statusText + \" that is not 200. Aborting the connection.\";\r\n          } else {\r\n            message = \"EventSource's response has a Content-Type specifying an unsupported type: \" + (contentType == undefined ? \"-\" : contentType.replace(/\\s+/g, \" \")) + \". Aborting the connection.\";\r\n          }\r\n          throwError(new Error(message));\r\n          close();\r\n          var event = new ConnectionEvent(\"error\", {\r\n            status: status,\r\n            statusText: statusText,\r\n            headers: headers\r\n          });\r\n          es.dispatchEvent(event);\r\n          fire(es, es.onerror, event);\r\n        }\r\n      }\r\n    };\r\n\r\n    var onProgress = function (textChunk) {\r\n      if (currentState === OPEN) {\r\n        var n = -1;\r\n        for (var i = 0; i < textChunk.length; i += 1) {\r\n          var c = textChunk.charCodeAt(i);\r\n          if (c === \"\\n\".charCodeAt(0) || c === \"\\r\".charCodeAt(0)) {\r\n            n = i;\r\n          }\r\n        }\r\n        var chunk = (n !== -1 ? textBuffer : \"\") + textChunk.slice(0, n + 1);\r\n        textBuffer = (n === -1 ? textBuffer : \"\") + textChunk.slice(n + 1);\r\n        if (chunk !== \"\") {\r\n          wasActivity = true;\r\n        }\r\n        for (var position = 0; position < chunk.length; position += 1) {\r\n          var c = chunk.charCodeAt(position);\r\n          if (state === AFTER_CR && c === \"\\n\".charCodeAt(0)) {\r\n            state = FIELD_START;\r\n          } else {\r\n            if (state === AFTER_CR) {\r\n              state = FIELD_START;\r\n            }\r\n            if (c === \"\\r\".charCodeAt(0) || c === \"\\n\".charCodeAt(0)) {\r\n              if (state !== FIELD_START) {\r\n                if (state === FIELD) {\r\n                  valueStart = position + 1;\r\n                }\r\n                var field = chunk.slice(fieldStart, valueStart - 1);\r\n                var value = chunk.slice(valueStart + (valueStart < position && chunk.charCodeAt(valueStart) === \" \".charCodeAt(0) ? 1 : 0), position);\r\n                if (field === \"data\") {\r\n                  dataBuffer += \"\\n\";\r\n                  dataBuffer += value;\r\n                } else if (field === \"id\") {\r\n                  lastEventIdBuffer = value;\r\n                } else if (field === \"event\") {\r\n                  eventTypeBuffer = value;\r\n                } else if (field === \"retry\") {\r\n                  initialRetry = parseDuration(value, initialRetry);\r\n                  retry = initialRetry;\r\n                } else if (field === \"heartbeatTimeout\") {\r\n                  heartbeatTimeout = parseDuration(value, heartbeatTimeout);\r\n                  if (timeout !== 0) {\r\n                    clearTimeout(timeout);\r\n                    timeout = setTimeout(function () {\r\n                      onTimeout();\r\n                    }, heartbeatTimeout);\r\n                  }\r\n                }\r\n              }\r\n              if (state === FIELD_START) {\r\n                if (dataBuffer !== \"\") {\r\n                  lastEventId = lastEventIdBuffer;\r\n                  if (eventTypeBuffer === \"\") {\r\n                    eventTypeBuffer = \"message\";\r\n                  }\r\n                  var event = new MessageEvent(eventTypeBuffer, {\r\n                    data: dataBuffer.slice(1),\r\n                    lastEventId: lastEventIdBuffer\r\n                  });\r\n                  es.dispatchEvent(event);\r\n                  if (eventTypeBuffer === \"message\") {\r\n                    fire(es, es.onmessage, event);\r\n                  }\r\n                  if (currentState === CLOSED) {\r\n                    return;\r\n                  }\r\n                }\r\n                dataBuffer = \"\";\r\n                eventTypeBuffer = \"\";\r\n              }\r\n              state = c === \"\\r\".charCodeAt(0) ? AFTER_CR : FIELD_START;\r\n            } else {\r\n              if (state === FIELD_START) {\r\n                fieldStart = position;\r\n                state = FIELD;\r\n              }\r\n              if (state === FIELD) {\r\n                if (c === \":\".charCodeAt(0)) {\r\n                  valueStart = position + 1;\r\n                  state = VALUE_START;\r\n                }\r\n              } else if (state === VALUE_START) {\r\n                state = VALUE;\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    };\r\n\r\n    var onFinish = function () {\r\n      if (currentState === OPEN || currentState === CONNECTING) {\r\n        currentState = WAITING;\r\n        if (timeout !== 0) {\r\n          clearTimeout(timeout);\r\n          timeout = 0;\r\n        }\r\n        timeout = setTimeout(function () {\r\n          onTimeout();\r\n        }, retry);\r\n        retry = clampDuration(Math.min(initialRetry * 16, retry * 2));\r\n\r\n        es.readyState = CONNECTING;\r\n        var event = new Event(\"error\");\r\n        es.dispatchEvent(event);\r\n        fire(es, es.onerror, event);\r\n      }\r\n    };\r\n\r\n    var close = function () {\r\n      currentState = CLOSED;\r\n      if (cancelFunction != undefined) {\r\n        cancelFunction();\r\n        cancelFunction = undefined;\r\n      }\r\n      if (timeout !== 0) {\r\n        clearTimeout(timeout);\r\n        timeout = 0;\r\n      }\r\n      es.readyState = CLOSED;\r\n    };\r\n\r\n    var onTimeout = function () {\r\n      timeout = 0;\r\n\r\n      if (currentState !== WAITING) {\r\n        if (!wasActivity && cancelFunction != undefined) {\r\n          throwError(new Error(\"No activity within \" + heartbeatTimeout + \" milliseconds. Reconnecting.\"));\r\n          cancelFunction();\r\n          cancelFunction = undefined;\r\n        } else {\r\n          wasActivity = false;\r\n          timeout = setTimeout(function () {\r\n            onTimeout();\r\n          }, heartbeatTimeout);\r\n        }\r\n        return;\r\n      }\r\n\r\n      wasActivity = false;\r\n      timeout = setTimeout(function () {\r\n        onTimeout();\r\n      }, heartbeatTimeout);\r\n\r\n      currentState = CONNECTING;\r\n      dataBuffer = \"\";\r\n      eventTypeBuffer = \"\";\r\n      lastEventIdBuffer = lastEventId;\r\n      textBuffer = \"\";\r\n      fieldStart = 0;\r\n      valueStart = 0;\r\n      state = FIELD_START;\r\n\r\n      // https://bugzilla.mozilla.org/show_bug.cgi?id=428916\r\n      // Request header field Last-Event-ID is not allowed by Access-Control-Allow-Headers.\r\n      var requestURL = url;\r\n      if (url.slice(0, 5) !== \"data:\" && url.slice(0, 5) !== \"blob:\") {\r\n        if (lastEventId !== \"\") {\r\n          requestURL += (url.indexOf(\"?\") === -1 ? \"?\" : \"&\") + \"lastEventId=\" + encodeURIComponent(lastEventId);\r\n        }\r\n      }\r\n      var requestHeaders = {};\r\n      requestHeaders[\"Accept\"] = \"text/event-stream\";\r\n      if (headers != undefined) {\r\n        for (var name in headers) {\r\n          if (Object.prototype.hasOwnProperty.call(headers, name)) {\r\n            requestHeaders[name] = headers[name];\r\n          }\r\n        }\r\n      }\r\n      try {\r\n        transport.open(xhr, onStart, onProgress, onFinish, requestURL, withCredentials, requestHeaders);\r\n      } catch (error) {\r\n        close();\r\n        throw error;\r\n      }\r\n    };\r\n\r\n    es.url = url;\r\n    es.readyState = CONNECTING;\r\n    es.withCredentials = withCredentials;\r\n    es._close = close;\r\n\r\n    onTimeout();\r\n  }\r\n\r\n  EventSourcePolyfill.prototype = Object.create(EventTarget.prototype);\r\n  EventSourcePolyfill.prototype.CONNECTING = CONNECTING;\r\n  EventSourcePolyfill.prototype.OPEN = OPEN;\r\n  EventSourcePolyfill.prototype.CLOSED = CLOSED;\r\n  EventSourcePolyfill.prototype.close = function () {\r\n    this._close();\r\n  };\r\n\r\n  EventSourcePolyfill.CONNECTING = CONNECTING;\r\n  EventSourcePolyfill.OPEN = OPEN;\r\n  EventSourcePolyfill.CLOSED = CLOSED;\r\n  EventSourcePolyfill.prototype.withCredentials = undefined;\r\n\r\n  global.EventSourcePolyfill = EventSourcePolyfill;\r\n  global.NativeEventSource = NativeEventSource;\r\n\r\n  if (XMLHttpRequest != undefined && (NativeEventSource == undefined || !(\"withCredentials\" in NativeEventSource.prototype))) {\r\n    // Why replace a native EventSource ?\r\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=444328\r\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=831392\r\n    // https://code.google.com/p/chromium/issues/detail?id=260144\r\n    // https://code.google.com/p/chromium/issues/detail?id=225654\r\n    // ...\r\n    global.EventSource = EventSourcePolyfill;\r\n  }\r\n\r\n}(typeof window !== 'undefined' ? window : this));\r\n\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// assets/js/event-source-polyfill.js","/** @license\r\n * eventsource.js\r\n * Available under MIT License (MIT)\r\n * https://github.com/Yaffle/EventSource/\r\n */\r\n\r\n/*jslint indent: 2, vars: true, plusplus: true */\r\n/*global setTimeout, clearTimeout */\r\n\r\n(function (global) {\r\n  \"use strict\";\r\n\r\n  var setTimeout = global.setTimeout;\r\n  var clearTimeout = global.clearTimeout;\r\n  var XMLHttpRequest = global.XMLHttpRequest;\r\n  var XDomainRequest = global.XDomainRequest;\r\n  var NativeEventSource = global.EventSource;\r\n  var document = global.document;\r\n  var Promise = global.Promise;\r\n  var fetch = global.fetch;\r\n  var Response = global.Response;\r\n  var TextDecoder = global.TextDecoder;\r\n  var TextEncoder = global.TextEncoder;\r\n\r\n  if (Object.create == null) {\r\n    Object.create = function (C) {\r\n      function F(){}\r\n      F.prototype = C;\r\n      return new F();\r\n    };\r\n  }\r\n\r\n  // ?\r\n  if (Promise != undefined && Promise.prototype[\"finally\"] == undefined) {\r\n    Promise.prototype[\"finally\"] = function (callback) {\r\n      return this.then(function (result) {\r\n        return Promise.resolve(callback()).then(function () {\r\n          return result;\r\n        });\r\n      }, function (error) {\r\n        return Promise.resolve(callback()).then(function () {\r\n          throw error;\r\n        });\r\n      });\r\n    };\r\n  }\r\n\r\n  function TextDecoderPolyfill() {\r\n    this.bitsNeeded = 0;\r\n    this.codePoint = 0;\r\n  }\r\n\r\n  TextDecoderPolyfill.prototype.decode = function (octets) {\r\n    function valid(codePoint, shift, octetsCount) {\r\n      if (octetsCount === 1) {\r\n        return codePoint >= 0x0080 >> shift && codePoint << shift <= 0x07FF;\r\n      }\r\n      if (octetsCount === 2) {\r\n        return codePoint >= 0x0800 >> shift && codePoint << shift <= 0xD7FF || codePoint >= 0xE000 >> shift && codePoint << shift <= 0xFFFF;\r\n      }\r\n      if (octetsCount === 3) {\r\n        return codePoint >= 0x010000 >> shift && codePoint << shift <= 0x10FFFF;\r\n      }\r\n      throw new Error();\r\n    }\r\n    function octetsCount(bitsNeeded, codePoint) {\r\n      if (bitsNeeded === 6 * 1) {\r\n        return codePoint >> 6 > 15 ? 3 : codePoint > 31 ? 2 : 1;\r\n      }\r\n      if (bitsNeeded === 6 * 2) {\r\n        return codePoint > 15 ? 3 : 2;\r\n      }\r\n      if (bitsNeeded === 6 * 3) {\r\n        return 3;\r\n      }\r\n      throw new Error();\r\n    }\r\n    var REPLACER = 0xFFFD;\r\n    var string = \"\";\r\n    var bitsNeeded = this.bitsNeeded;\r\n    var codePoint = this.codePoint;\r\n    for (var i = 0; i < octets.length; i += 1) {\r\n      var octet = octets[i];\r\n      if (bitsNeeded !== 0) {\r\n        if (octet < 128 || octet > 191 || !valid(codePoint << 6 | octet & 63, bitsNeeded - 6, octetsCount(bitsNeeded, codePoint))) {\r\n          bitsNeeded = 0;\r\n          codePoint = REPLACER;\r\n          string += String.fromCharCode(codePoint);\r\n        }\r\n      }\r\n      if (bitsNeeded === 0) {\r\n        if (octet >= 0 && octet <= 127) {\r\n          bitsNeeded = 0;\r\n          codePoint = octet;\r\n        } else if (octet >= 192 && octet <= 223) {\r\n          bitsNeeded = 6 * 1;\r\n          codePoint = octet & 31;\r\n        } else if (octet >= 224 && octet <= 239) {\r\n          bitsNeeded = 6 * 2;\r\n          codePoint = octet & 15;\r\n        } else if (octet >= 240 && octet <= 247) {\r\n          bitsNeeded = 6 * 3;\r\n          codePoint = octet & 7;\r\n        } else {\r\n          bitsNeeded = 0;\r\n          codePoint = REPLACER;\r\n        }\r\n        if (bitsNeeded !== 0 && !valid(codePoint, bitsNeeded, octetsCount(bitsNeeded, codePoint))) {\r\n          bitsNeeded = 0;\r\n          codePoint = REPLACER;\r\n        }\r\n      } else {\r\n        bitsNeeded -= 6;\r\n        codePoint = codePoint << 6 | octet & 63;\r\n      }\r\n      if (bitsNeeded === 0) {\r\n        if (codePoint <= 0xFFFF) {\r\n          string += String.fromCharCode(codePoint);\r\n        } else {\r\n          string += String.fromCharCode(0xD800 + (codePoint - 0xFFFF - 1 >> 10));\r\n          string += String.fromCharCode(0xDC00 + (codePoint - 0xFFFF - 1 & 0x3FF));\r\n        }\r\n      }\r\n    }\r\n    this.bitsNeeded = bitsNeeded;\r\n    this.codePoint = codePoint;\r\n    return string;\r\n  };\r\n\r\n  // Firefox < 38 throws an error with stream option\r\n  var supportsStreamOption = function () {\r\n    try {\r\n      return new TextDecoder().decode(new TextEncoder().encode(\"test\"), {stream: true}) === \"test\";\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n    return false;\r\n  };\r\n\r\n  // IE, Edge\r\n  if (TextDecoder == undefined || TextEncoder == undefined || !supportsStreamOption()) {\r\n    TextDecoder = TextDecoderPolyfill;\r\n  }\r\n\r\n  var k = function () {\r\n  };\r\n\r\n  function XHRWrapper(xhr) {\r\n    this.withCredentials = false;\r\n    this.responseType = \"\";\r\n    this.readyState = 0;\r\n    this.status = 0;\r\n    this.statusText = \"\";\r\n    this.responseText = \"\";\r\n    this.onprogress = k;\r\n    this.onreadystatechange = k;\r\n    this._contentType = \"\";\r\n    this._xhr = xhr;\r\n    this._sendTimeout = 0;\r\n    this._abort = k;\r\n  }\r\n\r\n  XHRWrapper.prototype.open = function (method, url) {\r\n    this._abort(true);\r\n\r\n    var that = this;\r\n    var xhr = this._xhr;\r\n    var state = 1;\r\n    var timeout = 0;\r\n\r\n    this._abort = function (silent) {\r\n      if (that._sendTimeout !== 0) {\r\n        clearTimeout(that._sendTimeout);\r\n        that._sendTimeout = 0;\r\n      }\r\n      if (state === 1 || state === 2 || state === 3) {\r\n        state = 4;\r\n        xhr.onload = k;\r\n        xhr.onerror = k;\r\n        xhr.onabort = k;\r\n        xhr.onprogress = k;\r\n        xhr.onreadystatechange = k;\r\n        // IE 8 - 9: XDomainRequest#abort() does not fire any event\r\n        // Opera < 10: XMLHttpRequest#abort() does not fire any event\r\n        xhr.abort();\r\n        if (timeout !== 0) {\r\n          clearTimeout(timeout);\r\n          timeout = 0;\r\n        }\r\n        if (!silent) {\r\n          that.readyState = 4;\r\n          that.onreadystatechange();\r\n        }\r\n      }\r\n      state = 0;\r\n    };\r\n\r\n    var onStart = function () {\r\n      if (state === 1) {\r\n        //state = 2;\r\n        var status = 0;\r\n        var statusText = \"\";\r\n        var contentType = undefined;\r\n        if (!(\"contentType\" in xhr)) {\r\n          try {\r\n            status = xhr.status;\r\n            statusText = xhr.statusText;\r\n            contentType = xhr.getResponseHeader(\"Content-Type\");\r\n          } catch (error) {\r\n            // IE < 10 throws exception for `xhr.status` when xhr.readyState === 2 || xhr.readyState === 3\r\n            // Opera < 11 throws exception for `xhr.status` when xhr.readyState === 2\r\n            // https://bugs.webkit.org/show_bug.cgi?id=29121\r\n            status = 0;\r\n            statusText = \"\";\r\n            contentType = undefined;\r\n            // Firefox < 14, Chrome ?, Safari ?\r\n            // https://bugs.webkit.org/show_bug.cgi?id=29658\r\n            // https://bugs.webkit.org/show_bug.cgi?id=77854\r\n          }\r\n        } else {\r\n          status = 200;\r\n          statusText = \"OK\";\r\n          contentType = xhr.contentType;\r\n        }\r\n        if (status !== 0) {\r\n          state = 2;\r\n          that.readyState = 2;\r\n          that.status = status;\r\n          that.statusText = statusText;\r\n          that._contentType = contentType;\r\n          that.onreadystatechange();\r\n        }\r\n      }\r\n    };\r\n    var onProgress = function () {\r\n      onStart();\r\n      if (state === 2 || state === 3) {\r\n        state = 3;\r\n        var responseText = \"\";\r\n        try {\r\n          responseText = xhr.responseText;\r\n        } catch (error) {\r\n          // IE 8 - 9 with XMLHttpRequest\r\n        }\r\n        that.readyState = 3;\r\n        that.responseText = responseText;\r\n        that.onprogress();\r\n      }\r\n    };\r\n    var onFinish = function () {\r\n      // Firefox 52 fires \"readystatechange\" (xhr.readyState === 4) without final \"readystatechange\" (xhr.readyState === 3)\r\n      // IE 8 fires \"onload\" without \"onprogress\"\r\n      onProgress();\r\n      if (state === 1 || state === 2 || state === 3) {\r\n        state = 4;\r\n        if (timeout !== 0) {\r\n          clearTimeout(timeout);\r\n          timeout = 0;\r\n        }\r\n        that.readyState = 4;\r\n        that.onreadystatechange();\r\n      }\r\n    };\r\n    var onReadyStateChange = function () {\r\n      if (xhr != undefined) { // Opera 12\r\n        if (xhr.readyState === 4) {\r\n          onFinish();\r\n        } else if (xhr.readyState === 3) {\r\n          onProgress();\r\n        } else if (xhr.readyState === 2) {\r\n          onStart();\r\n        }\r\n      }\r\n    };\r\n    var onTimeout = function () {\r\n      timeout = setTimeout(function () {\r\n        onTimeout();\r\n      }, 500);\r\n      if (xhr.readyState === 3) {\r\n        onProgress();\r\n      }\r\n    };\r\n\r\n    // XDomainRequest#abort removes onprogress, onerror, onload\r\n    xhr.onload = onFinish;\r\n    xhr.onerror = onFinish;\r\n    // improper fix to match Firefox behaviour, but it is better than just ignore abort\r\n    // see https://bugzilla.mozilla.org/show_bug.cgi?id=768596\r\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=880200\r\n    // https://code.google.com/p/chromium/issues/detail?id=153570\r\n    // IE 8 fires \"onload\" without \"onprogress\r\n    xhr.onabort = onFinish;\r\n\r\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=736723    \r\n    if (!(\"sendAsBinary\" in XMLHttpRequest.prototype) && !(\"mozAnon\" in XMLHttpRequest.prototype)) {\r\n      xhr.onprogress = onProgress;\r\n    }\r\n\r\n    // IE 8 - 9 (XMLHTTPRequest)\r\n    // Opera < 12\r\n    // Firefox < 3.5\r\n    // Firefox 3.5 - 3.6 - ? < 9.0\r\n    // onprogress is not fired sometimes or delayed\r\n    // see also #64\r\n    xhr.onreadystatechange = onReadyStateChange;\r\n\r\n    if (\"contentType\" in xhr) {\r\n      url += (url.indexOf(\"?\") === -1 ? \"?\" : \"&\") + \"padding=true\";\r\n    }\r\n    xhr.open(method, url, true);\r\n\r\n    if (\"readyState\" in xhr) {\r\n      // workaround for Opera 12 issue with \"progress\" events\r\n      // #91\r\n      timeout = setTimeout(function () {\r\n        onTimeout();\r\n      }, 0);\r\n    }\r\n  };\r\n  XHRWrapper.prototype.abort = function () {\r\n    this._abort(false);\r\n  };\r\n  XHRWrapper.prototype.getResponseHeader = function (name) {\r\n    return this._contentType;\r\n  };\r\n  XHRWrapper.prototype.setRequestHeader = function (name, value) {\r\n    var xhr = this._xhr;\r\n    if (\"setRequestHeader\" in xhr) {\r\n      xhr.setRequestHeader(name, value);\r\n    }\r\n  };\r\n  XHRWrapper.prototype.getAllResponseHeaders = function () {\r\n    return this._xhr.getAllResponseHeaders != undefined ? this._xhr.getAllResponseHeaders() : \"\";\r\n  };\r\n  XHRWrapper.prototype.send = function () {\r\n    // loading indicator in Safari < ? (6), Chrome < 14, Firefox\r\n    if (!(\"ontimeout\" in XMLHttpRequest.prototype) &&\r\n        document != undefined &&\r\n        document.readyState != undefined &&\r\n        document.readyState !== \"complete\") {\r\n      var that = this;\r\n      that._sendTimeout = setTimeout(function () {\r\n        that._sendTimeout = 0;\r\n        that.send();\r\n      }, 4);\r\n      return;\r\n    }\r\n\r\n    var xhr = this._xhr;\r\n    // withCredentials should be set after \"open\" for Safari and Chrome (< 19 ?)\r\n    xhr.withCredentials = this.withCredentials;\r\n    xhr.responseType = this.responseType;\r\n    try {\r\n      // xhr.send(); throws \"Not enough arguments\" in Firefox 3.0\r\n      xhr.send(undefined);\r\n    } catch (error1) {\r\n      // Safari 5.1.7, Opera 12\r\n      throw error1;\r\n    }\r\n  };\r\n\r\n  function toLowerCase(name) {\r\n    return name.replace(/[A-Z]/g, function (c) {\r\n      return String.fromCharCode(c.charCodeAt(0) + 0x20);\r\n    });\r\n  }\r\n\r\n  function HeadersPolyfill(all) {\r\n    // Get headers: implemented according to mozilla's example code: https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/getAllResponseHeaders#Example\r\n    var map = Object.create(null);\r\n    var array = all.split(\"\\r\\n\");\r\n    for (var i = 0; i < array.length; i += 1) {\r\n      var line = array[i];\r\n      var parts = line.split(\": \");\r\n      var name = parts.shift();\r\n      var value = parts.join(\": \");\r\n      map[toLowerCase(name)] = value;\r\n    }\r\n    this._map = map;\r\n  }\r\n  HeadersPolyfill.prototype.get = function (name) {\r\n    return this._map[toLowerCase(name)];\r\n  };\r\n\r\n  function XHRTransport() {\r\n  }\r\n\r\n  XHRTransport.prototype.open = function (xhr, onStartCallback, onProgressCallback, onFinishCallback, url, withCredentials, headers) {\r\n    xhr.open(\"GET\", url);\r\n    var offset = 0;\r\n    xhr.onprogress = function () {\r\n      var responseText = xhr.responseText;\r\n      var chunk = responseText.slice(offset);\r\n      offset += chunk.length;\r\n      onProgressCallback(chunk);\r\n    };\r\n    xhr.onreadystatechange = function () {\r\n      if (xhr.readyState === 2) {\r\n        var status = xhr.status;\r\n        var statusText = xhr.statusText;\r\n        var contentType = xhr.getResponseHeader(\"Content-Type\");\r\n        var headers = xhr.getAllResponseHeaders();\r\n        onStartCallback(status, statusText, contentType, new HeadersPolyfill(headers), function () {\r\n          xhr.abort();\r\n        });\r\n      } else if (xhr.readyState === 4) {\r\n        onFinishCallback();\r\n      }\r\n    };\r\n    xhr.withCredentials = withCredentials;\r\n    xhr.responseType = \"text\";\r\n    for (var name in headers) {\r\n      if (Object.prototype.hasOwnProperty.call(headers, name)) {\r\n        xhr.setRequestHeader(name, headers[name]);\r\n      }\r\n    }\r\n    xhr.send();\r\n  };\r\n  \r\n  function HeadersWrapper(headers) {\r\n    this._headers = headers;\r\n  }\r\n  HeadersWrapper.prototype.get = function (name) {\r\n    return this._headers.get(name);\r\n  };\r\n\r\n  function FetchTransport() {\r\n  }\r\n\r\n  FetchTransport.prototype.open = function (xhr, onStartCallback, onProgressCallback, onFinishCallback, url, withCredentials, headers) {\r\n    // cache: \"no-store\"\r\n    // https://bugs.chromium.org/p/chromium/issues/detail?id=453190\r\n    var textDecoder = new TextDecoder();\r\n    fetch(url, {\r\n      headers: headers,\r\n      credentials: withCredentials ? \"include\" : \"same-origin\"\r\n    }).then(function (response) {\r\n      var reader = response.body.getReader();\r\n      onStartCallback(response.status, response.statusText, response.headers.get(\"Content-Type\"), new HeadersWrapper(response.headers), function () {\r\n        reader.cancel();\r\n      });\r\n      return new Promise(function (resolve, reject) {\r\n        var readNextChunk = function () {\r\n          reader.read().then(function (result) {\r\n            if (result.done) {\r\n              //Note: bytes in textDecoder are ignored\r\n              resolve(undefined);\r\n            } else {\r\n              var chunk = textDecoder.decode(result.value, {stream: true});\r\n              onProgressCallback(chunk);\r\n              readNextChunk();\r\n            }\r\n          })[\"catch\"](function (error) {\r\n            reject(error);\r\n          });\r\n        };\r\n        readNextChunk();\r\n      });\r\n    })[\"finally\"](function () {\r\n      onFinishCallback();\r\n    });\r\n  };\r\n\r\n  function EventTarget() {\r\n    this._listeners = Object.create(null);\r\n  }\r\n\r\n  function throwError(e) {\r\n    setTimeout(function () {\r\n      throw e;\r\n    }, 0);\r\n  }\r\n\r\n  EventTarget.prototype.dispatchEvent = function (event) {\r\n    event.target = this;\r\n    var typeListeners = this._listeners[event.type];\r\n    if (typeListeners != undefined) {\r\n      var length = typeListeners.length;\r\n      for (var i = 0; i < length; i += 1) {\r\n        var listener = typeListeners[i];\r\n        try {\r\n          if (typeof listener.handleEvent === \"function\") {\r\n            listener.handleEvent(event);\r\n          } else {\r\n            listener.call(this, event);\r\n          }\r\n        } catch (e) {\r\n          throwError(e);\r\n        }\r\n      }\r\n    }\r\n  };\r\n  EventTarget.prototype.addEventListener = function (type, listener) {\r\n    type = String(type);\r\n    var listeners = this._listeners;\r\n    var typeListeners = listeners[type];\r\n    if (typeListeners == undefined) {\r\n      typeListeners = [];\r\n      listeners[type] = typeListeners;\r\n    }\r\n    var found = false;\r\n    for (var i = 0; i < typeListeners.length; i += 1) {\r\n      if (typeListeners[i] === listener) {\r\n        found = true;\r\n      }\r\n    }\r\n    if (!found) {\r\n      typeListeners.push(listener);\r\n    }\r\n  };\r\n  EventTarget.prototype.removeEventListener = function (type, listener) {\r\n    type = String(type);\r\n    var listeners = this._listeners;\r\n    var typeListeners = listeners[type];\r\n    if (typeListeners != undefined) {\r\n      var filtered = [];\r\n      for (var i = 0; i < typeListeners.length; i += 1) {\r\n        if (typeListeners[i] !== listener) {\r\n          filtered.push(typeListeners[i]);\r\n        }\r\n      }\r\n      if (filtered.length === 0) {\r\n        delete listeners[type];\r\n      } else {\r\n        listeners[type] = filtered;\r\n      }\r\n    }\r\n  };\r\n\r\n  function Event(type) {\r\n    this.type = type;\r\n    this.target = undefined;\r\n  }\r\n\r\n  function MessageEvent(type, options) {\r\n    Event.call(this, type);\r\n    this.data = options.data;\r\n    this.lastEventId = options.lastEventId;\r\n  }\r\n\r\n  MessageEvent.prototype = Object.create(Event.prototype);\r\n\r\n  function ConnectionEvent(type, options) {\r\n    Event.call(this, type);\r\n    this.status = options.status;\r\n    this.statusText = options.statusText;\r\n    this.headers = options.headers;\r\n  }\r\n\r\n  ConnectionEvent.prototype = Object.create(Event.prototype);\r\n\r\n  var WAITING = -1;\r\n  var CONNECTING = 0;\r\n  var OPEN = 1;\r\n  var CLOSED = 2;\r\n\r\n  var AFTER_CR = -1;\r\n  var FIELD_START = 0;\r\n  var FIELD = 1;\r\n  var VALUE_START = 2;\r\n  var VALUE = 3;\r\n\r\n  var contentTypeRegExp = /^text\\/event\\-stream;?(\\s*charset\\=utf\\-8)?$/i;\r\n\r\n  var MINIMUM_DURATION = 1000;\r\n  var MAXIMUM_DURATION = 18000000;\r\n\r\n  var parseDuration = function (value, def) {\r\n    var n = parseInt(value, 10);\r\n    if (n !== n) {\r\n      n = def;\r\n    }\r\n    return clampDuration(n);\r\n  };\r\n  var clampDuration = function (n) {\r\n    return Math.min(Math.max(n, MINIMUM_DURATION), MAXIMUM_DURATION);\r\n  };\r\n\r\n  var fire = function (that, f, event) {\r\n    try {\r\n      if (typeof f === \"function\") {\r\n        f.call(that, event);\r\n      }\r\n    } catch (e) {\r\n      throwError(e);\r\n    }\r\n  };\r\n\r\n  function EventSourcePolyfill(url, options) {\r\n    EventTarget.call(this);\r\n\r\n    this.onopen = undefined;\r\n    this.onmessage = undefined;\r\n    this.onerror = undefined;\r\n\r\n    this.url = undefined;\r\n    this.readyState = undefined;\r\n    this.withCredentials = undefined;\r\n\r\n    this._close = undefined;\r\n\r\n    start(this, url, options);\r\n  }\r\n\r\n  function getBestTransport() {\r\n    return XMLHttpRequest && \"withCredentials\" in XMLHttpRequest.prototype\r\n      ? XMLHttpRequest\r\n      : XDomainRequest;\r\n  }\r\n\r\n  var isFetchSupported = fetch != undefined && Response != undefined && \"body\" in Response.prototype;\r\n\r\n  function start(es, url, options) {\r\n    url = String(url);\r\n    var withCredentials = options != undefined && Boolean(options.withCredentials);\r\n\r\n    var initialRetry = clampDuration(1000);\r\n    var heartbeatTimeout = options != undefined && options.heartbeatTimeout != undefined ? parseDuration(options.heartbeatTimeout, 45000) : clampDuration(45000);\r\n\r\n    var lastEventId = \"\";\r\n    var retry = initialRetry;\r\n    var wasActivity = false;\r\n    var headers = options != undefined && options.headers != undefined ? JSON.parse(JSON.stringify(options.headers)) : undefined;\r\n    var CurrentTransport = options != undefined && options.Transport != undefined ? options.Transport : getBestTransport();\r\n    var xhr = isFetchSupported ? undefined : new XHRWrapper(new CurrentTransport());\r\n    var transport = isFetchSupported ? new FetchTransport() : new XHRTransport();\r\n    var cancelFunction = undefined;\r\n    var timeout = 0;\r\n    var currentState = WAITING;\r\n    var dataBuffer = \"\";\r\n    var lastEventIdBuffer = \"\";\r\n    var eventTypeBuffer = \"\";\r\n\r\n    var textBuffer = \"\";\r\n    var state = FIELD_START;\r\n    var fieldStart = 0;\r\n    var valueStart = 0;\r\n\r\n    var onStart = function (status, statusText, contentType, headers, cancel) {\r\n      if (currentState === CONNECTING) {\r\n        cancelFunction = cancel;\r\n        if (status === 200 && contentType != undefined && contentTypeRegExp.test(contentType)) {\r\n          currentState = OPEN;\r\n          wasActivity = true;\r\n          retry = initialRetry;\r\n          es.readyState = OPEN;\r\n          var event = new ConnectionEvent(\"open\", {\r\n            status: status,\r\n            statusText: statusText,\r\n            headers: headers\r\n          });\r\n          es.dispatchEvent(event);\r\n          fire(es, es.onopen, event);\r\n        } else {\r\n          var message = \"\";\r\n          if (status !== 200) {\r\n            if (statusText) {\r\n              statusText = statusText.replace(/\\s+/g, \" \");\r\n            }\r\n            message = \"EventSource's response has a status \" + status + \" \" + statusText + \" that is not 200. Aborting the connection.\";\r\n          } else {\r\n            message = \"EventSource's response has a Content-Type specifying an unsupported type: \" + (contentType == undefined ? \"-\" : contentType.replace(/\\s+/g, \" \")) + \". Aborting the connection.\";\r\n          }\r\n          throwError(new Error(message));\r\n          close();\r\n          var event = new ConnectionEvent(\"error\", {\r\n            status: status,\r\n            statusText: statusText,\r\n            headers: headers\r\n          });\r\n          es.dispatchEvent(event);\r\n          fire(es, es.onerror, event);\r\n        }\r\n      }\r\n    };\r\n\r\n    var onProgress = function (textChunk) {\r\n      if (currentState === OPEN) {\r\n        var n = -1;\r\n        for (var i = 0; i < textChunk.length; i += 1) {\r\n          var c = textChunk.charCodeAt(i);\r\n          if (c === \"\\n\".charCodeAt(0) || c === \"\\r\".charCodeAt(0)) {\r\n            n = i;\r\n          }\r\n        }\r\n        var chunk = (n !== -1 ? textBuffer : \"\") + textChunk.slice(0, n + 1);\r\n        textBuffer = (n === -1 ? textBuffer : \"\") + textChunk.slice(n + 1);\r\n        if (chunk !== \"\") {\r\n          wasActivity = true;\r\n        }\r\n        for (var position = 0; position < chunk.length; position += 1) {\r\n          var c = chunk.charCodeAt(position);\r\n          if (state === AFTER_CR && c === \"\\n\".charCodeAt(0)) {\r\n            state = FIELD_START;\r\n          } else {\r\n            if (state === AFTER_CR) {\r\n              state = FIELD_START;\r\n            }\r\n            if (c === \"\\r\".charCodeAt(0) || c === \"\\n\".charCodeAt(0)) {\r\n              if (state !== FIELD_START) {\r\n                if (state === FIELD) {\r\n                  valueStart = position + 1;\r\n                }\r\n                var field = chunk.slice(fieldStart, valueStart - 1);\r\n                var value = chunk.slice(valueStart + (valueStart < position && chunk.charCodeAt(valueStart) === \" \".charCodeAt(0) ? 1 : 0), position);\r\n                if (field === \"data\") {\r\n                  dataBuffer += \"\\n\";\r\n                  dataBuffer += value;\r\n                } else if (field === \"id\") {\r\n                  lastEventIdBuffer = value;\r\n                } else if (field === \"event\") {\r\n                  eventTypeBuffer = value;\r\n                } else if (field === \"retry\") {\r\n                  initialRetry = parseDuration(value, initialRetry);\r\n                  retry = initialRetry;\r\n                } else if (field === \"heartbeatTimeout\") {\r\n                  heartbeatTimeout = parseDuration(value, heartbeatTimeout);\r\n                  if (timeout !== 0) {\r\n                    clearTimeout(timeout);\r\n                    timeout = setTimeout(function () {\r\n                      onTimeout();\r\n                    }, heartbeatTimeout);\r\n                  }\r\n                }\r\n              }\r\n              if (state === FIELD_START) {\r\n                if (dataBuffer !== \"\") {\r\n                  lastEventId = lastEventIdBuffer;\r\n                  if (eventTypeBuffer === \"\") {\r\n                    eventTypeBuffer = \"message\";\r\n                  }\r\n                  var event = new MessageEvent(eventTypeBuffer, {\r\n                    data: dataBuffer.slice(1),\r\n                    lastEventId: lastEventIdBuffer\r\n                  });\r\n                  es.dispatchEvent(event);\r\n                  if (eventTypeBuffer === \"message\") {\r\n                    fire(es, es.onmessage, event);\r\n                  }\r\n                  if (currentState === CLOSED) {\r\n                    return;\r\n                  }\r\n                }\r\n                dataBuffer = \"\";\r\n                eventTypeBuffer = \"\";\r\n              }\r\n              state = c === \"\\r\".charCodeAt(0) ? AFTER_CR : FIELD_START;\r\n            } else {\r\n              if (state === FIELD_START) {\r\n                fieldStart = position;\r\n                state = FIELD;\r\n              }\r\n              if (state === FIELD) {\r\n                if (c === \":\".charCodeAt(0)) {\r\n                  valueStart = position + 1;\r\n                  state = VALUE_START;\r\n                }\r\n              } else if (state === VALUE_START) {\r\n                state = VALUE;\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    };\r\n\r\n    var onFinish = function () {\r\n      if (currentState === OPEN || currentState === CONNECTING) {\r\n        currentState = WAITING;\r\n        if (timeout !== 0) {\r\n          clearTimeout(timeout);\r\n          timeout = 0;\r\n        }\r\n        timeout = setTimeout(function () {\r\n          onTimeout();\r\n        }, retry);\r\n        retry = clampDuration(Math.min(initialRetry * 16, retry * 2));\r\n\r\n        es.readyState = CONNECTING;\r\n        var event = new Event(\"error\");\r\n        es.dispatchEvent(event);\r\n        fire(es, es.onerror, event);\r\n      }\r\n    };\r\n\r\n    var close = function () {\r\n      currentState = CLOSED;\r\n      if (cancelFunction != undefined) {\r\n        cancelFunction();\r\n        cancelFunction = undefined;\r\n      }\r\n      if (timeout !== 0) {\r\n        clearTimeout(timeout);\r\n        timeout = 0;\r\n      }\r\n      es.readyState = CLOSED;\r\n    };\r\n\r\n    var onTimeout = function () {\r\n      timeout = 0;\r\n\r\n      if (currentState !== WAITING) {\r\n        if (!wasActivity && cancelFunction != undefined) {\r\n          throwError(new Error(\"No activity within \" + heartbeatTimeout + \" milliseconds. Reconnecting.\"));\r\n          cancelFunction();\r\n          cancelFunction = undefined;\r\n        } else {\r\n          wasActivity = false;\r\n          timeout = setTimeout(function () {\r\n            onTimeout();\r\n          }, heartbeatTimeout);\r\n        }\r\n        return;\r\n      }\r\n\r\n      wasActivity = false;\r\n      timeout = setTimeout(function () {\r\n        onTimeout();\r\n      }, heartbeatTimeout);\r\n\r\n      currentState = CONNECTING;\r\n      dataBuffer = \"\";\r\n      eventTypeBuffer = \"\";\r\n      lastEventIdBuffer = lastEventId;\r\n      textBuffer = \"\";\r\n      fieldStart = 0;\r\n      valueStart = 0;\r\n      state = FIELD_START;\r\n\r\n      // https://bugzilla.mozilla.org/show_bug.cgi?id=428916\r\n      // Request header field Last-Event-ID is not allowed by Access-Control-Allow-Headers.\r\n      var requestURL = url;\r\n      if (url.slice(0, 5) !== \"data:\" && url.slice(0, 5) !== \"blob:\") {\r\n        if (lastEventId !== \"\") {\r\n          requestURL += (url.indexOf(\"?\") === -1 ? \"?\" : \"&\") + \"lastEventId=\" + encodeURIComponent(lastEventId);\r\n        }\r\n      }\r\n      var requestHeaders = {};\r\n      requestHeaders[\"Accept\"] = \"text/event-stream\";\r\n      if (headers != undefined) {\r\n        for (var name in headers) {\r\n          if (Object.prototype.hasOwnProperty.call(headers, name)) {\r\n            requestHeaders[name] = headers[name];\r\n          }\r\n        }\r\n      }\r\n      try {\r\n        transport.open(xhr, onStart, onProgress, onFinish, requestURL, withCredentials, requestHeaders);\r\n      } catch (error) {\r\n        close();\r\n        throw error;\r\n      }\r\n    };\r\n\r\n    es.url = url;\r\n    es.readyState = CONNECTING;\r\n    es.withCredentials = withCredentials;\r\n    es._close = close;\r\n\r\n    onTimeout();\r\n  }\r\n\r\n  EventSourcePolyfill.prototype = Object.create(EventTarget.prototype);\r\n  EventSourcePolyfill.prototype.CONNECTING = CONNECTING;\r\n  EventSourcePolyfill.prototype.OPEN = OPEN;\r\n  EventSourcePolyfill.prototype.CLOSED = CLOSED;\r\n  EventSourcePolyfill.prototype.close = function () {\r\n    this._close();\r\n  };\r\n\r\n  EventSourcePolyfill.CONNECTING = CONNECTING;\r\n  EventSourcePolyfill.OPEN = OPEN;\r\n  EventSourcePolyfill.CLOSED = CLOSED;\r\n  EventSourcePolyfill.prototype.withCredentials = undefined;\r\n\r\n  global.EventSourcePolyfill = EventSourcePolyfill;\r\n  global.NativeEventSource = NativeEventSource;\r\n\r\n  if (XMLHttpRequest != undefined && (NativeEventSource == undefined || !(\"withCredentials\" in NativeEventSource.prototype))) {\r\n    // Why replace a native EventSource ?\r\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=444328\r\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=831392\r\n    // https://code.google.com/p/chromium/issues/detail?id=260144\r\n    // https://code.google.com/p/chromium/issues/detail?id=225654\r\n    // ...\r\n    global.EventSource = EventSourcePolyfill;\r\n  }\r\n\r\n}(typeof window !== 'undefined' ? window : this));\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/event-source-polyfill/src/eventsource.js\n// module id = ./node_modules/event-source-polyfill/src/eventsource.js\n// module chunks = 0"],"sourceRoot":""}